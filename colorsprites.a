
	processor 6502
        include "vcs.h"
        include "macro.h"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; This asm is an excercise to understand how HMOVE sets
; A range between -8 and 7 wrt RESP. Both Sprites are used
; The first appears as the diagonal line, the second as a
; straight line. Challenge to the reader: WHY ARE ONLY THE
; POSITIVE VALUES of HMOV rendering the Sprite? 
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SpriteHeight	equ 8

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Variables segment

        seg.u Variables
	org $80

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Code segment

	seg Code
        org $f000

Start
	CLEAN_START
        lda #%10000000	; Set Hunion

NextFrame
	VERTICAL_SYNC	; This macro efficiently gives us 1 + 3 lines of VSYNC
	
; 36 lines of VBLANK
	ldx #36
LVBlank	sta WSYNC
	dex
	bne LVBlank	; Disable VBLANK
        stx VBLANK
        
        lda #$80	; Set Player one Sprite
        sta GRP0	;	to its leftmost dot
	lda #$01	; Set Player two Sprite
        sta GRP1	;	to its rightmost dot
	ldx #192	; Draw the customary 192 scanlines
ScanLoop
	REPEAT 10	; wait to 
	nop		;	get beam 
        REPEND		;		arbitrarily near center
        
        ; All we do here is ++ the hi nibble in the Accumulator
        ; and apply it to HMP0 to adjust the fine position.
        ; QUESTION FOR READER: WHY DOESN'T THE SPRITE RENDER WHEN
        ; THE VALUE EQUATES TO A NEGATIVE VALUE (-7...-1?)

        clc
        adc #%00010000	; Add (UI) '1' to high nibble in Accumulator

	sta HMCLR	; Due diligence - clear all Motion values
        sta HMP0	; Set fine P0 Sprite pos to incremented value (*)
        sta RESP0	; 	set coarse position of P0 Sprite
        sta RESP1	; Set coarse position (only) of P1 Sprite
        sta WSYNC	; Wait for next scanline
        sta HMOVE	; Apply fine tweak
        stx COLUBK	; Set the background color
        
	dex		; decrement the scanline
	bne ScanLoop
	;(*)PS: Tried putting HMP0 after RESP's, didn't help

	lda #2		; Reenable VBLANK for bottom (and top of next frame)
        sta VBLANK

	ldx #30		; Draw the customary 30 overscan lines
LVOver	sta WSYNC
	dex
	bne LVOver
	
; Go back and do another frame
	jmp NextFrame
                
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Epilogue

	org $fffc
        .word Start	; reset vector
        .word Start	; BRK vector
